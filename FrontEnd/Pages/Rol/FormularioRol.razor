
<EditForm Model="@model" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="row">
        <label for="nombre">COD:</label>
        <InputText id="cod" class="form-control" @bind-Value="model.Cod"></InputText>
        <ValidationMessage For="@(()=> model.Cod)" />
    </div>
     <div class="row">
        <label for="nombre">Nombre:</label>
        <InputText id="nombre" class="form-control" @bind-Value="model.Nombre"></InputText>
        <ValidationMessage For="@(()=> model.Nombre)" />
    </div>
   
    <br />
    <div class="row">
        <button class="btn btn-primary" type="submit">Guardar</button>
        <button type="button" @onclick="onCancel" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
    </div>


</EditForm>

@code {

    [Parameter] public string modo { get; set; } = "crear";
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public EventCallback onCancel { get; set; }
    [Parameter] public DTOs.Rol.RolActualizarDTO model { get; set; }


    private async Task guardar()
    {


        await Task.Delay(2000);

    }


}