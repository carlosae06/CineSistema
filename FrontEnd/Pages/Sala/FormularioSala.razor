
<EditForm Model="@model" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="row">
        <label for="ci">COD:</label>
        <InputText id="cod" class="form-control" @bind-Value="model.Cod"></InputText>
        <ValidationMessage For="@(()=> model.Cod)" />
    </div>
    <div class="row">
        <label for="nombre">Fila:</label>
        <InputNumber id="fila" class="form-control" @bind-Value="model.Fila"></InputNumber>
        <ValidationMessage For="@(()=> model.Fila)" />
    </div>

    <div class="row">
        <label for="nombre">Columna:</label>
        <InputNumber id="columna" class="form-control" @bind-Value="model.Columna"></InputNumber>
        <ValidationMessage For="@(()=> model.Columna)" />
    </div>
    <div class="row">
        <label for="nombre">Capacidad:</label>
        <InputNumber id="capacidad" class="form-control" @bind-Value="model.Capacidad"></InputNumber>
        <ValidationMessage For="@(()=> model.Capacidad)" />
    </div>
    <br />
    <div class="row">
        <button class="btn btn-primary" type="submit">Guardar</button>
        <button type="button" @onclick="onCancel" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
    </div>


</EditForm>

@code {

    [Parameter] public string modo { get; set; } = "crear";
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public EventCallback onCancel { get; set; }
    [Parameter] public DTOs.Sala.SalaActualizarDTO model { get; set; }

    private async Task guardar()
    {
        await Task.Delay(2000);
    }

}

