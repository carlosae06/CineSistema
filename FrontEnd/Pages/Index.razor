
@page "/"
@using System.Security.Claims
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "ADM,VEN")]

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<AuthorizeView Roles="VEN,ADM">
    <Authorized>
        <SurveyPrompt Title="Se muestra este componente cuando se esta autenticado" />
        <h5>@context.User.Identity!.Name</h5>
    </Authorized>
    <NotAuthorized>
        <p>
            No estas autorizado.
        </p>
    </NotAuthorized>
</AuthorizeView>

@code
{
    [CascadingParameter] Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await authenticationStateTask;
        var user = authenticationState.User;
        if (user.Identity.IsAuthenticated)
        {
            var roles = user.Claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).ToList();
            if (roles.Contains("VEN"))
            {
                Console.WriteLine("El usuario es tipo Venta");
            }
            else if (roles.Contains("ADM"))
            {
                Console.WriteLine("El usuario es administrador");
            }
        }
    }
}

        @*@page "/"
@inject IJSRuntime js
@using static FrontEnd.Shared.MainLayout

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />
*@