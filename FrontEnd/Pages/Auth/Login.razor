@page "/Login"
@inject IRepositorio repositorioHTTP
@inject NavigationManager navigationManager
@inject ILoginService loginService


<EditForm Model="usuarioLoginDTO" OnValidSubmit="login">
       <DataAnnotationsValidator />

    <div class="form-group">
        <label for="user">Usuario</label>
        <InputText class="form-control" id="user" @bind-Value="usuarioLoginDTO.UserName" />
        <ValidationMessage For="@(() => usuarioLoginDTO.UserName)" />
    </div>
    
    <div class="form-group">
        <label for="password">Password</label>
        <InputText type="password" class="form-control" id="password" @bind-Value="usuarioLoginDTO.Password" />
        <ValidationMessage For="@(() => usuarioLoginDTO.Password)" />
    </div>
    
    <button class="btn btn-primary" type="submit">Login</button>
       
</EditForm>


<h3></h3>


@code {

    UsuarioLoginDTO usuarioLoginDTO = new UsuarioLoginDTO();
    string mensaje = "";


    async Task login()
    {
        var response = await repositorioHTTP.Post<UsuarioLoginDTO,UserToken>("Usuarios/Login", usuarioLoginDTO);
        if (response.Error)
        {
            mensaje = "Error al iniciar";

        }
        else
        {
            await loginService.Login(response.Response!);
            navigationManager.NavigateTo("/");
        }
    }
    

}
